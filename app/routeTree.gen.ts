/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ChatImport } from './routes/_chat'
import { Route as ChatIndexImport } from './routes/_chat.index'
import { Route as AuthPathnameImport } from './routes/auth/$pathname'
import { Route as ChatThreadThreadIdImport } from './routes/_chat.thread.$threadId'

// Create/Update Routes

const ChatRoute = ChatImport.update({
  id: '/_chat',
  getParentRoute: () => rootRoute,
} as any)

const ChatIndexRoute = ChatIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChatRoute,
} as any)

const AuthPathnameRoute = AuthPathnameImport.update({
  id: '/auth/$pathname',
  path: '/auth/$pathname',
  getParentRoute: () => rootRoute,
} as any)

const ChatThreadThreadIdRoute = ChatThreadThreadIdImport.update({
  id: '/thread/$threadId',
  path: '/thread/$threadId',
  getParentRoute: () => ChatRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_chat': {
      id: '/_chat'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ChatImport
      parentRoute: typeof rootRoute
    }
    '/auth/$pathname': {
      id: '/auth/$pathname'
      path: '/auth/$pathname'
      fullPath: '/auth/$pathname'
      preLoaderRoute: typeof AuthPathnameImport
      parentRoute: typeof rootRoute
    }
    '/_chat/': {
      id: '/_chat/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ChatIndexImport
      parentRoute: typeof ChatImport
    }
    '/_chat/thread/$threadId': {
      id: '/_chat/thread/$threadId'
      path: '/thread/$threadId'
      fullPath: '/thread/$threadId'
      preLoaderRoute: typeof ChatThreadThreadIdImport
      parentRoute: typeof ChatImport
    }
  }
}

// Create and export the route tree

interface ChatRouteChildren {
  ChatIndexRoute: typeof ChatIndexRoute
  ChatThreadThreadIdRoute: typeof ChatThreadThreadIdRoute
}

const ChatRouteChildren: ChatRouteChildren = {
  ChatIndexRoute: ChatIndexRoute,
  ChatThreadThreadIdRoute: ChatThreadThreadIdRoute,
}

const ChatRouteWithChildren = ChatRoute._addFileChildren(ChatRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof ChatRouteWithChildren
  '/auth/$pathname': typeof AuthPathnameRoute
  '/': typeof ChatIndexRoute
  '/thread/$threadId': typeof ChatThreadThreadIdRoute
}

export interface FileRoutesByTo {
  '/auth/$pathname': typeof AuthPathnameRoute
  '/': typeof ChatIndexRoute
  '/thread/$threadId': typeof ChatThreadThreadIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_chat': typeof ChatRouteWithChildren
  '/auth/$pathname': typeof AuthPathnameRoute
  '/_chat/': typeof ChatIndexRoute
  '/_chat/thread/$threadId': typeof ChatThreadThreadIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/auth/$pathname' | '/' | '/thread/$threadId'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth/$pathname' | '/' | '/thread/$threadId'
  id:
    | '__root__'
    | '/_chat'
    | '/auth/$pathname'
    | '/_chat/'
    | '/_chat/thread/$threadId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ChatRoute: typeof ChatRouteWithChildren
  AuthPathnameRoute: typeof AuthPathnameRoute
}

const rootRouteChildren: RootRouteChildren = {
  ChatRoute: ChatRouteWithChildren,
  AuthPathnameRoute: AuthPathnameRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_chat",
        "/auth/$pathname"
      ]
    },
    "/_chat": {
      "filePath": "_chat.tsx",
      "children": [
        "/_chat/",
        "/_chat/thread/$threadId"
      ]
    },
    "/auth/$pathname": {
      "filePath": "auth/$pathname.tsx"
    },
    "/_chat/": {
      "filePath": "_chat.index.tsx",
      "parent": "/_chat"
    },
    "/_chat/thread/$threadId": {
      "filePath": "_chat.thread.$threadId.tsx",
      "parent": "/_chat"
    }
  }
}
ROUTE_MANIFEST_END */
