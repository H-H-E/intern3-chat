/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as ChatRouteImport } from './routes/_chat'
import { Route as ChatIndexRouteImport } from './routes/_chat.index'
import { Route as AuthPathnameRouteImport } from './routes/auth/$pathname'
import { Route as ChatThreadThreadIdRouteImport } from './routes/_chat.thread.$threadId'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const ChatRoute = ChatRouteImport.update({
  id: '/_chat',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatIndexRoute = ChatIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChatRoute,
} as any)
const AuthPathnameRoute = AuthPathnameRouteImport.update({
  id: '/auth/$pathname',
  path: '/auth/$pathname',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatThreadThreadIdRoute = ChatThreadThreadIdRouteImport.update({
  id: '/thread/$threadId',
  path: '/thread/$threadId',
  getParentRoute: () => ChatRoute,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '': typeof ChatRouteWithChildren
  '/auth/$pathname': typeof AuthPathnameRoute
  '/': typeof ChatIndexRoute
  '/thread/$threadId': typeof ChatThreadThreadIdRoute
}
export interface FileRoutesByTo {
  '/auth/$pathname': typeof AuthPathnameRoute
  '/': typeof ChatIndexRoute
  '/thread/$threadId': typeof ChatThreadThreadIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_chat': typeof ChatRouteWithChildren
  '/auth/$pathname': typeof AuthPathnameRoute
  '/_chat/': typeof ChatIndexRoute
  '/_chat/thread/$threadId': typeof ChatThreadThreadIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/auth/$pathname' | '/' | '/thread/$threadId'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth/$pathname' | '/' | '/thread/$threadId'
  id:
    | '__root__'
    | '/_chat'
    | '/auth/$pathname'
    | '/_chat/'
    | '/_chat/thread/$threadId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  ChatRoute: typeof ChatRouteWithChildren
  AuthPathnameRoute: typeof AuthPathnameRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_chat': {
      id: '/_chat'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_chat/': {
      id: '/_chat/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ChatIndexRouteImport
      parentRoute: typeof ChatRoute
    }
    '/auth/$pathname': {
      id: '/auth/$pathname'
      path: '/auth/$pathname'
      fullPath: '/auth/$pathname'
      preLoaderRoute: typeof AuthPathnameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_chat/thread/$threadId': {
      id: '/_chat/thread/$threadId'
      path: '/thread/$threadId'
      fullPath: '/thread/$threadId'
      preLoaderRoute: typeof ChatThreadThreadIdRouteImport
      parentRoute: typeof ChatRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface ChatRouteChildren {
  ChatIndexRoute: typeof ChatIndexRoute
  ChatThreadThreadIdRoute: typeof ChatThreadThreadIdRoute
}

const ChatRouteChildren: ChatRouteChildren = {
  ChatIndexRoute: ChatIndexRoute,
  ChatThreadThreadIdRoute: ChatThreadThreadIdRoute,
}

const ChatRouteWithChildren = ChatRoute._addFileChildren(ChatRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  ChatRoute: ChatRouteWithChildren,
  AuthPathnameRoute: AuthPathnameRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
